# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_cosmology', [dirname(__file__)])
        except ImportError:
            import _cosmology
            return _cosmology
        if fp is not None:
            try:
                _mod = imp.load_module('_cosmology', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _cosmology = swig_import_helper()
    del swig_import_helper
else:
    import _cosmology
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class dp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, dp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, dp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _cosmology.new_dp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_dp
    __del__ = lambda self : None;
    def assign(self, *args): return _cosmology.dp_assign(self, *args)
    def value(self): return _cosmology.dp_value(self)
    def cast(self): return _cosmology.dp_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _cosmology.dp_frompointer
    if _newclass:frompointer = staticmethod(_cosmology.dp_frompointer)
dp_swigregister = _cosmology.dp_swigregister
dp_swigregister(dp)

def dp_frompointer(*args):
  return _cosmology.dp_frompointer(*args)
dp_frompointer = _cosmology.dp_frompointer

class cosmo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, cosmo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, cosmo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Om0"] = _cosmology.cosmo_Om0_set
    __swig_getmethods__["Om0"] = _cosmology.cosmo_Om0_get
    if _newclass:Om0 = _swig_property(_cosmology.cosmo_Om0_get, _cosmology.cosmo_Om0_set)
    __swig_setmethods__["Omk"] = _cosmology.cosmo_Omk_set
    __swig_getmethods__["Omk"] = _cosmology.cosmo_Omk_get
    if _newclass:Omk = _swig_property(_cosmology.cosmo_Omk_get, _cosmology.cosmo_Omk_set)
    __swig_setmethods__["w0"] = _cosmology.cosmo_w0_set
    __swig_getmethods__["w0"] = _cosmology.cosmo_w0_get
    if _newclass:w0 = _swig_property(_cosmology.cosmo_w0_get, _cosmology.cosmo_w0_set)
    __swig_setmethods__["wa"] = _cosmology.cosmo_wa_set
    __swig_getmethods__["wa"] = _cosmology.cosmo_wa_get
    if _newclass:wa = _swig_property(_cosmology.cosmo_wa_get, _cosmology.cosmo_wa_set)
    __swig_setmethods__["Omb"] = _cosmology.cosmo_Omb_set
    __swig_getmethods__["Omb"] = _cosmology.cosmo_Omb_get
    if _newclass:Omb = _swig_property(_cosmology.cosmo_Omb_get, _cosmology.cosmo_Omb_set)
    __swig_setmethods__["hval"] = _cosmology.cosmo_hval_set
    __swig_getmethods__["hval"] = _cosmology.cosmo_hval_get
    if _newclass:hval = _swig_property(_cosmology.cosmo_hval_get, _cosmology.cosmo_hval_set)
    __swig_setmethods__["th"] = _cosmology.cosmo_th_set
    __swig_getmethods__["th"] = _cosmology.cosmo_th_get
    if _newclass:th = _swig_property(_cosmology.cosmo_th_get, _cosmology.cosmo_th_set)
    __swig_setmethods__["s8"] = _cosmology.cosmo_s8_set
    __swig_getmethods__["s8"] = _cosmology.cosmo_s8_get
    if _newclass:s8 = _swig_property(_cosmology.cosmo_s8_get, _cosmology.cosmo_s8_set)
    __swig_setmethods__["nspec"] = _cosmology.cosmo_nspec_set
    __swig_getmethods__["nspec"] = _cosmology.cosmo_nspec_get
    if _newclass:nspec = _swig_property(_cosmology.cosmo_nspec_get, _cosmology.cosmo_nspec_set)
    __swig_setmethods__["ximax"] = _cosmology.cosmo_ximax_set
    __swig_getmethods__["ximax"] = _cosmology.cosmo_ximax_get
    if _newclass:ximax = _swig_property(_cosmology.cosmo_ximax_get, _cosmology.cosmo_ximax_set)
    __swig_setmethods__["cfac"] = _cosmology.cosmo_cfac_set
    __swig_getmethods__["cfac"] = _cosmology.cosmo_cfac_get
    if _newclass:cfac = _swig_property(_cosmology.cosmo_cfac_get, _cosmology.cosmo_cfac_set)
    def __init__(self): 
        this = _cosmology.new_cosmo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_cosmo
    __del__ = lambda self : None;
cosmo_swigregister = _cosmology.cosmo_swigregister
cosmo_swigregister(cosmo)

class gf_par(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gf_par, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gf_par, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Omega0"] = _cosmology.gf_par_Omega0_set
    __swig_getmethods__["Omega0"] = _cosmology.gf_par_Omega0_get
    if _newclass:Omega0 = _swig_property(_cosmology.gf_par_Omega0_get, _cosmology.gf_par_Omega0_set)
    __swig_setmethods__["OmegaL"] = _cosmology.gf_par_OmegaL_set
    __swig_getmethods__["OmegaL"] = _cosmology.gf_par_OmegaL_get
    if _newclass:OmegaL = _swig_property(_cosmology.gf_par_OmegaL_get, _cosmology.gf_par_OmegaL_set)
    __swig_setmethods__["w0"] = _cosmology.gf_par_w0_set
    __swig_getmethods__["w0"] = _cosmology.gf_par_w0_get
    if _newclass:w0 = _swig_property(_cosmology.gf_par_w0_get, _cosmology.gf_par_w0_set)
    __swig_setmethods__["wa"] = _cosmology.gf_par_wa_set
    __swig_getmethods__["wa"] = _cosmology.gf_par_wa_get
    if _newclass:wa = _swig_property(_cosmology.gf_par_wa_get, _cosmology.gf_par_wa_set)
    def __init__(self): 
        this = _cosmology.new_gf_par()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_gf_par
    __del__ = lambda self : None;
gf_par_swigregister = _cosmology.gf_par_swigregister
gf_par_swigregister(gf_par)

class qk_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qk_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qk_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.qk_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.qk_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.qk_params_cptr_get, _cosmology.qk_params_cptr_set)
    __swig_setmethods__["k"] = _cosmology.qk_params_k_set
    __swig_getmethods__["k"] = _cosmology.qk_params_k_get
    if _newclass:k = _swig_property(_cosmology.qk_params_k_get, _cosmology.qk_params_k_set)
    __swig_setmethods__["z"] = _cosmology.qk_params_z_set
    __swig_getmethods__["z"] = _cosmology.qk_params_z_get
    if _newclass:z = _swig_property(_cosmology.qk_params_z_get, _cosmology.qk_params_z_set)
    __swig_setmethods__["xmax"] = _cosmology.qk_params_xmax_set
    __swig_getmethods__["xmax"] = _cosmology.qk_params_xmax_get
    if _newclass:xmax = _swig_property(_cosmology.qk_params_xmax_get, _cosmology.qk_params_xmax_set)
    __swig_setmethods__["opt"] = _cosmology.qk_params_opt_set
    __swig_getmethods__["opt"] = _cosmology.qk_params_opt_get
    if _newclass:opt = _swig_property(_cosmology.qk_params_opt_get, _cosmology.qk_params_opt_set)
    def __init__(self): 
        this = _cosmology.new_qk_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_qk_params
    __del__ = lambda self : None;
qk_params_swigregister = _cosmology.qk_params_swigregister
qk_params_swigregister(qk_params)

class projwpk_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, projwpk_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, projwpk_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.projwpk_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.projwpk_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.projwpk_params_cptr_get, _cosmology.projwpk_params_cptr_set)
    __swig_setmethods__["R"] = _cosmology.projwpk_params_R_set
    __swig_getmethods__["R"] = _cosmology.projwpk_params_R_get
    if _newclass:R = _swig_property(_cosmology.projwpk_params_R_get, _cosmology.projwpk_params_R_set)
    __swig_setmethods__["z"] = _cosmology.projwpk_params_z_set
    __swig_getmethods__["z"] = _cosmology.projwpk_params_z_get
    if _newclass:z = _swig_property(_cosmology.projwpk_params_z_get, _cosmology.projwpk_params_z_set)
    __swig_setmethods__["fkai"] = _cosmology.projwpk_params_fkai_set
    __swig_getmethods__["fkai"] = _cosmology.projwpk_params_fkai_get
    if _newclass:fkai = _swig_property(_cosmology.projwpk_params_fkai_get, _cosmology.projwpk_params_fkai_set)
    def __init__(self): 
        this = _cosmology.new_projwpk_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_projwpk_params
    __del__ = lambda self : None;
projwpk_params_swigregister = _cosmology.projwpk_params_swigregister
projwpk_params_swigregister(projwpk_params)


def dTime(*args):
  return _cosmology.dTime(*args)
dTime = _cosmology.dTime

def dChi(*args):
  return _cosmology.dChi(*args)
dChi = _cosmology.dChi

def dneffint(*args):
  return _cosmology.dneffint(*args)
dneffint = _cosmology.dneffint

def dCint(*args):
  return _cosmology.dCint(*args)
dCint = _cosmology.dCint

def findmvir(*args):
  return _cosmology.findmvir(*args)
findmvir = _cosmology.findmvir

def findksig(*args):
  return _cosmology.findksig(*args)
findksig = _cosmology.findksig

def dxi_L(*args):
  return _cosmology.dxi_L(*args)
dxi_L = _cosmology.dxi_L

def dPktest_L(*args):
  return _cosmology.dPktest_L(*args)
dPktest_L = _cosmology.dPktest_L

def dPktest_NL(*args):
  return _cosmology.dPktest_NL(*args)
dPktest_NL = _cosmology.dPktest_NL

def dPktest_zetaNL(*args):
  return _cosmology.dPktest_zetaNL(*args)
dPktest_zetaNL = _cosmology.dPktest_zetaNL

def dxi_NL(*args):
  return _cosmology.dxi_NL(*args)
dxi_NL = _cosmology.dxi_NL

def E_sq(*args):
  return _cosmology.E_sq(*args)
E_sq = _cosmology.E_sq

def dE_sqdz(*args):
  return _cosmology.dE_sqdz(*args)
dE_sqdz = _cosmology.dE_sqdz

def getall(*args):
  return _cosmology.getall(*args)
getall = _cosmology.getall

def d2lnE_sqdz2(*args):
  return _cosmology.d2lnE_sqdz2(*args)
d2lnE_sqdz2 = _cosmology.d2lnE_sqdz2

def gf_func(*args):
  return _cosmology.gf_func(*args)
gf_func = _cosmology.gf_func

def gf_jac(*args):
  return _cosmology.gf_jac(*args)
gf_jac = _cosmology.gf_jac

def findrz(*args):
  return _cosmology.findrz(*args)
findrz = _cosmology.findrz

def findzmax(*args):
  return _cosmology.findzmax(*args)
findzmax = _cosmology.findzmax

def dwpnl(*args):
  return _cosmology.dwpnl(*args)
dwpnl = _cosmology.dwpnl

def dwpl(*args):
  return _cosmology.dwpl(*args)
dwpl = _cosmology.dwpl

def dQk(*args):
  return _cosmology.dQk(*args)
dQk = _cosmology.dQk

def dxinlbar(*args):
  return _cosmology.dxinlbar(*args)
dxinlbar = _cosmology.dxinlbar

def dxinlbarbar(*args):
  return _cosmology.dxinlbarbar(*args)
dxinlbarbar = _cosmology.dxinlbarbar

def dxilbar(*args):
  return _cosmology.dxilbar(*args)
dxilbar = _cosmology.dxilbar

def dxilbarbar(*args):
  return _cosmology.dxilbarbar(*args)
dxilbarbar = _cosmology.dxilbarbar

def dwpnl_kaiser(*args):
  return _cosmology.dwpnl_kaiser(*args)
dwpnl_kaiser = _cosmology.dwpnl_kaiser

def dwpl_kaiser(*args):
  return _cosmology.dwpl_kaiser(*args)
dwpl_kaiser = _cosmology.dwpl_kaiser
class cosmology(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, cosmology, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, cosmology, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _cosmology.delete_cosmology
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _cosmology.new_cosmology(*args)
        try: self.this.append(this)
        except: self.this = this
    def cosmo_free(self): return _cosmology.cosmology_cosmo_free(self)
    def Chiofz_num(self, *args): return _cosmology.cosmology_Chiofz_num(self, *args)
    def Chiofz(self, *args): return _cosmology.cosmology_Chiofz(self, *args)
    def Dlofz(self, *args): return _cosmology.cosmology_Dlofz(self, *args)
    def Daofz(self, *args): return _cosmology.cosmology_Daofz(self, *args)
    def Daofzlh(self, *args): return _cosmology.cosmology_Daofzlh(self, *args)
    def growthfactor_num(self, *args): return _cosmology.cosmology_growthfactor_num(self, *args)
    def dlnDdln1pz(self, *args): return _cosmology.cosmology_dlnDdln1pz(self, *args)
    def set_optmf(self, *args): return _cosmology.cosmology_set_optmf(self, *args)
    def Delta2_L(self, *args): return _cosmology.cosmology_Delta2_L(self, *args)
    def Delta2_NL(self, *args): return _cosmology.cosmology_Delta2_NL(self, *args)
    def Pk_L(self, *args): return _cosmology.cosmology_Pk_L(self, *args)
    def Pk_NL(self, *args): return _cosmology.cosmology_Pk_NL(self, *args)
    def init_powerspectra_NL(self, *args): return _cosmology.cosmology_init_powerspectra_NL(self, *args)
    def init_powerspectra_L(self): return _cosmology.cosmology_init_powerspectra_L(self)
    def Delta2_L_num(self, *args): return _cosmology.cosmology_Delta2_L_num(self, *args)
    def Delta2_NL_num(self, *args): return _cosmology.cosmology_Delta2_NL_num(self, *args)
    def xi_L(self, *args): return _cosmology.cosmology_xi_L(self, *args)
    def xi_NL(self, *args): return _cosmology.cosmology_xi_NL(self, *args)
    def xi_L_old(self, *args): return _cosmology.cosmology_xi_L_old(self, *args)
    def xi_NL_old(self, *args): return _cosmology.cosmology_xi_NL_old(self, *args)
    def init_xi_L(self): return _cosmology.cosmology_init_xi_L(self)
    def xi_L_num(self, *args): return _cosmology.cosmology_xi_L_num(self, *args)
    def init_xi_NL(self, *args): return _cosmology.cosmology_init_xi_NL(self, *args)
    def xi_NL_num(self, *args): return _cosmology.cosmology_xi_NL_num(self, *args)
    def Pktest_L(self, *args): return _cosmology.cosmology_Pktest_L(self, *args)
    def Pktest_NL(self, *args): return _cosmology.cosmology_Pktest_NL(self, *args)
    def Pktest_zetaNL(self, *args): return _cosmology.cosmology_Pktest_zetaNL(self, *args)
    def nofm(self, *args): return _cosmology.cosmology_nofm(self, *args)
    def bias(self, *args): return _cosmology.cosmology_bias(self, *args)
    def varM_TH_num(self, *args): return _cosmology.cosmology_varM_TH_num(self, *args)
    def varM_TH_num_deriv(self, *args): return _cosmology.cosmology_varM_TH_num_deriv(self, *args)
    def Nplus(self, *args): return _cosmology.cosmology_Nplus(self, *args)
    def getM(self, *args): return _cosmology.cosmology_getM(self, *args)
    def modelNFWhalo(self, *args): return _cosmology.cosmology_modelNFWhalo(self, *args)
    def modelNFWhalo_com(self, *args): return _cosmology.cosmology_modelNFWhalo_com(self, *args)
    def conc(self, *args): return _cosmology.cosmology_conc(self, *args)
    def ukofm(self, *args): return _cosmology.cosmology_ukofm(self, *args)
    def uskofm(self, *args): return _cosmology.cosmology_uskofm(self, *args)
    def ukinterp(self, *args): return _cosmology.cosmology_ukinterp(self, *args)
    def ukinit(self): return _cosmology.cosmology_ukinit(self)
    def ukinit2(self): return _cosmology.cosmology_ukinit2(self)
    def Eofz(self, *args): return _cosmology.cosmology_Eofz(self, *args)
    def setnew_z(self, *args): return _cosmology.cosmology_setnew_z(self, *args)
    __swig_setmethods__["z_glob"] = _cosmology.cosmology_z_glob_set
    __swig_getmethods__["z_glob"] = _cosmology.cosmology_z_glob_get
    if _newclass:z_glob = _swig_property(_cosmology.cosmology_z_glob_get, _cosmology.cosmology_z_glob_set)
    __swig_setmethods__["gf_glob"] = _cosmology.cosmology_gf_glob_set
    __swig_getmethods__["gf_glob"] = _cosmology.cosmology_gf_glob_get
    if _newclass:gf_glob = _swig_property(_cosmology.cosmology_gf_glob_get, _cosmology.cosmology_gf_glob_set)
    def gets8(self): return _cosmology.cosmology_gets8(self)
    def getOmb(self): return _cosmology.cosmology_getOmb(self)
    def geth(self): return _cosmology.cosmology_geth(self)
    def getns(self): return _cosmology.cosmology_getns(self)
    def getzeta_rmax(self): return _cosmology.cosmology_getzeta_rmax(self)
    def getzetamax(self): return _cosmology.cosmology_getzetamax(self)
    def getxinlzetamax(self): return _cosmology.cosmology_getxinlzetamax(self)
    def get_cfac(self): return _cosmology.cosmology_get_cfac(self)
    def set_cfac(self, *args): return _cosmology.cosmology_set_cfac(self, *args)
    def getzmax(self, *args): return _cosmology.cosmology_getzmax(self, *args)
    def getLmin(self, *args): return _cosmology.cosmology_getLmin(self, *args)
    def Time(self, *args): return _cosmology.cosmology_Time(self, *args)
    def Lookback(self, *args): return _cosmology.cosmology_Lookback(self, *args)
    def wpnl(self, *args): return _cosmology.cosmology_wpnl(self, *args)
    def wpl(self, *args): return _cosmology.cosmology_wpl(self, *args)
    __swig_setmethods__["fgm_m0"] = _cosmology.cosmology_fgm_m0_set
    __swig_getmethods__["fgm_m0"] = _cosmology.cosmology_fgm_m0_get
    if _newclass:fgm_m0 = _swig_property(_cosmology.cosmology_fgm_m0_get, _cosmology.cosmology_fgm_m0_set)
    __swig_setmethods__["fgm_slp"] = _cosmology.cosmology_fgm_slp_set
    __swig_getmethods__["fgm_slp"] = _cosmology.cosmology_fgm_slp_get
    if _newclass:fgm_slp = _swig_property(_cosmology.cosmology_fgm_slp_get, _cosmology.cosmology_fgm_slp_set)
    def xiNL_bar_num(self, *args): return _cosmology.cosmology_xiNL_bar_num(self, *args)
    def init_xiNL_bar(self, *args): return _cosmology.cosmology_init_xiNL_bar(self, *args)
    def xiNL_bar(self, *args): return _cosmology.cosmology_xiNL_bar(self, *args)
    def xiNL_barbar_num(self, *args): return _cosmology.cosmology_xiNL_barbar_num(self, *args)
    def init_xiNL_barbar(self, *args): return _cosmology.cosmology_init_xiNL_barbar(self, *args)
    def xiNL_barbar(self, *args): return _cosmology.cosmology_xiNL_barbar(self, *args)
    def xiL_bar_num(self, *args): return _cosmology.cosmology_xiL_bar_num(self, *args)
    def init_xiL_bar(self, *args): return _cosmology.cosmology_init_xiL_bar(self, *args)
    def xiL_bar(self, *args): return _cosmology.cosmology_xiL_bar(self, *args)
    def xiL_barbar_num(self, *args): return _cosmology.cosmology_xiL_barbar_num(self, *args)
    def init_xiL_barbar(self, *args): return _cosmology.cosmology_init_xiL_barbar(self, *args)
    def xiL_barbar(self, *args): return _cosmology.cosmology_xiL_barbar(self, *args)
    def wpnl_kaiser(self, *args): return _cosmology.cosmology_wpnl_kaiser(self, *args)
    def xi_NL_kaiser(self, *args): return _cosmology.cosmology_xi_NL_kaiser(self, *args)
    def wpl_kaiser(self, *args): return _cosmology.cosmology_wpl_kaiser(self, *args)
    def xi_L_kaiser(self, *args): return _cosmology.cosmology_xi_L_kaiser(self, *args)
    def renew(self, *args): return _cosmology.cosmology_renew(self, *args)
    def rsound(self): return _cosmology.cosmology_rsound(self)
    def get_deltapi(self, *args): return _cosmology.cosmology_get_deltapi(self, *args)
    def get_sinsqang(self, *args): return _cosmology.cosmology_get_sinsqang(self, *args)
    def get_logrp(self, *args): return _cosmology.cosmology_get_logrp(self, *args)
cosmology_swigregister = _cosmology.cosmology_swigregister
cosmology_swigregister(cosmology)

class np_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, np_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, np_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.np_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.np_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.np_params_cptr_get, _cosmology.np_params_cptr_set)
    __swig_setmethods__["z"] = _cosmology.np_params_z_set
    __swig_getmethods__["z"] = _cosmology.np_params_z_get
    if _newclass:z = _swig_property(_cosmology.np_params_z_get, _cosmology.np_params_z_set)
    __swig_setmethods__["Np"] = _cosmology.np_params_Np_set
    __swig_getmethods__["Np"] = _cosmology.np_params_Np_get
    if _newclass:Np = _swig_property(_cosmology.np_params_Np_get, _cosmology.np_params_Np_set)
    def __init__(self): 
        this = _cosmology.new_np_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_np_params
    __del__ = lambda self : None;
np_params_swigregister = _cosmology.np_params_swigregister
np_params_swigregister(np_params)

class c_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, c_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, c_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.c_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.c_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.c_params_cptr_get, _cosmology.c_params_cptr_set)
    def __init__(self): 
        this = _cosmology.new_c_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_c_params
    __del__ = lambda self : None;
c_params_swigregister = _cosmology.c_params_swigregister
c_params_swigregister(c_params)

class coll_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, coll_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, coll_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.coll_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.coll_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.coll_params_cptr_get, _cosmology.coll_params_cptr_set)
    __swig_setmethods__["sig"] = _cosmology.coll_params_sig_set
    __swig_getmethods__["sig"] = _cosmology.coll_params_sig_get
    if _newclass:sig = _swig_property(_cosmology.coll_params_sig_get, _cosmology.coll_params_sig_set)
    def __init__(self): 
        this = _cosmology.new_coll_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_coll_params
    __del__ = lambda self : None;
coll_params_swigregister = _cosmology.coll_params_swigregister
coll_params_swigregister(coll_params)

class mvir_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mvir_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mvir_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.mvir_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.mvir_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.mvir_params_cptr_get, _cosmology.mvir_params_cptr_set)
    __swig_setmethods__["m200"] = _cosmology.mvir_params_m200_set
    __swig_getmethods__["m200"] = _cosmology.mvir_params_m200_get
    if _newclass:m200 = _swig_property(_cosmology.mvir_params_m200_get, _cosmology.mvir_params_m200_set)
    __swig_setmethods__["z"] = _cosmology.mvir_params_z_set
    __swig_getmethods__["z"] = _cosmology.mvir_params_z_get
    if _newclass:z = _swig_property(_cosmology.mvir_params_z_get, _cosmology.mvir_params_z_set)
    def __init__(self): 
        this = _cosmology.new_mvir_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_mvir_params
    __del__ = lambda self : None;
mvir_params_swigregister = _cosmology.mvir_params_swigregister
mvir_params_swigregister(mvir_params)

class c200_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, c200_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, c200_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.c200_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.c200_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.c200_params_cptr_get, _cosmology.c200_params_cptr_set)
    __swig_setmethods__["cvir"] = _cosmology.c200_params_cvir_set
    __swig_getmethods__["cvir"] = _cosmology.c200_params_cvir_get
    if _newclass:cvir = _swig_property(_cosmology.c200_params_cvir_get, _cosmology.c200_params_cvir_set)
    __swig_setmethods__["omegaz"] = _cosmology.c200_params_omegaz_set
    __swig_getmethods__["omegaz"] = _cosmology.c200_params_omegaz_get
    if _newclass:omegaz = _swig_property(_cosmology.c200_params_omegaz_get, _cosmology.c200_params_omegaz_set)
    __swig_setmethods__["dcz"] = _cosmology.c200_params_dcz_set
    __swig_getmethods__["dcz"] = _cosmology.c200_params_dcz_get
    if _newclass:dcz = _swig_property(_cosmology.c200_params_dcz_get, _cosmology.c200_params_dcz_set)
    def __init__(self): 
        this = _cosmology.new_c200_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_c200_params
    __del__ = lambda self : None;
c200_params_swigregister = _cosmology.c200_params_swigregister
c200_params_swigregister(c200_params)

class cvar_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, cvar_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, cvar_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.cvar_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.cvar_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.cvar_params_cptr_get, _cosmology.cvar_params_cptr_set)
    __swig_setmethods__["R"] = _cosmology.cvar_params_R_set
    __swig_getmethods__["R"] = _cosmology.cvar_params_R_get
    if _newclass:R = _swig_property(_cosmology.cvar_params_R_get, _cosmology.cvar_params_R_set)
    __swig_setmethods__["z"] = _cosmology.cvar_params_z_set
    __swig_getmethods__["z"] = _cosmology.cvar_params_z_get
    if _newclass:z = _swig_property(_cosmology.cvar_params_z_get, _cosmology.cvar_params_z_set)
    __swig_setmethods__["psinit"] = _cosmology.cvar_params_psinit_set
    __swig_getmethods__["psinit"] = _cosmology.cvar_params_psinit_get
    if _newclass:psinit = _swig_property(_cosmology.cvar_params_psinit_get, _cosmology.cvar_params_psinit_set)
    def __init__(self): 
        this = _cosmology.new_cvar_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_cvar_params
    __del__ = lambda self : None;
cvar_params_swigregister = _cosmology.cvar_params_swigregister
cvar_params_swigregister(cvar_params)

class pk_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pk_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pk_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.pk_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.pk_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.pk_params_cptr_get, _cosmology.pk_params_cptr_set)
    __swig_setmethods__["k"] = _cosmology.pk_params_k_set
    __swig_getmethods__["k"] = _cosmology.pk_params_k_get
    if _newclass:k = _swig_property(_cosmology.pk_params_k_get, _cosmology.pk_params_k_set)
    __swig_setmethods__["z"] = _cosmology.pk_params_z_set
    __swig_getmethods__["z"] = _cosmology.pk_params_z_get
    if _newclass:z = _swig_property(_cosmology.pk_params_z_get, _cosmology.pk_params_z_set)
    def __init__(self): 
        this = _cosmology.new_pk_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_pk_params
    __del__ = lambda self : None;
pk_params_swigregister = _cosmology.pk_params_swigregister
pk_params_swigregister(pk_params)

class xi_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, xi_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, xi_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.xi_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.xi_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.xi_params_cptr_get, _cosmology.xi_params_cptr_set)
    __swig_setmethods__["r"] = _cosmology.xi_params_r_set
    __swig_getmethods__["r"] = _cosmology.xi_params_r_get
    if _newclass:r = _swig_property(_cosmology.xi_params_r_get, _cosmology.xi_params_r_set)
    __swig_setmethods__["z"] = _cosmology.xi_params_z_set
    __swig_getmethods__["z"] = _cosmology.xi_params_z_get
    if _newclass:z = _swig_property(_cosmology.xi_params_z_get, _cosmology.xi_params_z_set)
    def __init__(self): 
        this = _cosmology.new_xi_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_xi_params
    __del__ = lambda self : None;
xi_params_swigregister = _cosmology.xi_params_swigregister
xi_params_swigregister(xi_params)

class ksig_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ksig_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ksig_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.ksig_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.ksig_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.ksig_params_cptr_get, _cosmology.ksig_params_cptr_set)
    __swig_setmethods__["z"] = _cosmology.ksig_params_z_set
    __swig_getmethods__["z"] = _cosmology.ksig_params_z_get
    if _newclass:z = _swig_property(_cosmology.ksig_params_z_get, _cosmology.ksig_params_z_set)
    def __init__(self): 
        this = _cosmology.new_ksig_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_ksig_params
    __del__ = lambda self : None;
ksig_params_swigregister = _cosmology.ksig_params_swigregister
ksig_params_swigregister(ksig_params)

class projwp_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, projwp_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, projwp_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.projwp_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.projwp_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.projwp_params_cptr_get, _cosmology.projwp_params_cptr_set)
    __swig_setmethods__["R"] = _cosmology.projwp_params_R_set
    __swig_getmethods__["R"] = _cosmology.projwp_params_R_get
    if _newclass:R = _swig_property(_cosmology.projwp_params_R_get, _cosmology.projwp_params_R_set)
    __swig_setmethods__["z"] = _cosmology.projwp_params_z_set
    __swig_getmethods__["z"] = _cosmology.projwp_params_z_get
    if _newclass:z = _swig_property(_cosmology.projwp_params_z_get, _cosmology.projwp_params_z_set)
    def __init__(self): 
        this = _cosmology.new_projwp_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_projwp_params
    __del__ = lambda self : None;
projwp_params_swigregister = _cosmology.projwp_params_swigregister
projwp_params_swigregister(projwp_params)

class rz_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rz_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rz_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.rz_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.rz_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.rz_params_cptr_get, _cosmology.rz_params_cptr_set)
    __swig_setmethods__["z"] = _cosmology.rz_params_z_set
    __swig_getmethods__["z"] = _cosmology.rz_params_z_get
    if _newclass:z = _swig_property(_cosmology.rz_params_z_get, _cosmology.rz_params_z_set)
    __swig_setmethods__["tgt"] = _cosmology.rz_params_tgt_set
    __swig_getmethods__["tgt"] = _cosmology.rz_params_tgt_get
    if _newclass:tgt = _swig_property(_cosmology.rz_params_tgt_get, _cosmology.rz_params_tgt_set)
    def __init__(self): 
        this = _cosmology.new_rz_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_rz_params
    __del__ = lambda self : None;
rz_params_swigregister = _cosmology.rz_params_swigregister
rz_params_swigregister(rz_params)

class z_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, z_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, z_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cptr"] = _cosmology.z_params_cptr_set
    __swig_getmethods__["cptr"] = _cosmology.z_params_cptr_get
    if _newclass:cptr = _swig_property(_cosmology.z_params_cptr_get, _cosmology.z_params_cptr_set)
    __swig_setmethods__["mag"] = _cosmology.z_params_mag_set
    __swig_getmethods__["mag"] = _cosmology.z_params_mag_get
    if _newclass:mag = _swig_property(_cosmology.z_params_mag_get, _cosmology.z_params_mag_set)
    def __init__(self): 
        this = _cosmology.new_z_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cosmology.delete_z_params
    __del__ = lambda self : None;
z_params_swigregister = _cosmology.z_params_swigregister
z_params_swigregister(z_params)

# This file is compatible with both classic and new-style classes.


